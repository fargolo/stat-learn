color=factor(V4)))
library(magrittr)
library(ggplot2)
re_vec <- c(0,1/2,1/3,1/4,1/5,
1/6,1/7,1/8,1/9,1/10)
re_vec2 <- c(1/2,1/3,1/4,1/5,
1/6,1/7,1/8,1/9,1/10,1/11)
im_vec <- (rep(pi/3,times=length(re_vec)))
my_data <- cbind(re_vec,re_vec2,im_vec,1:length(re_vec)) %>% data.frame
my_data
my_data
my_data
re_vec <- c(1/2,1/3,1/4,1/5,
1/6,1/7,1/8,1/9,1/10)
re_vec
im_vec <- (rep(pi/3,times=length(re_vec)))
im_vec
for (i in 1:length(re_vec)){
my_data$x_rot[i] <- my_data$re_vec[i]*my_data$im_vec[i]*cos(pi/3)
my_data$y_rot[i] <- my_data$re_vec[i]*my_data$im_vec[i]*sin(pi/3)
}
re_vec <- c(1/2,1/3,1/4,1/5,
1/6,1/7,1/8,1/9,1/10)
im_vec <- (rep(pi/3,times=length(re_vec)))
my_data <- cbind(re_vec,im_vec,1:length(re_vec)) %>% data.frame
re_vec2 <- c(1/2,1/3,1/4,1/5,
1/6,1/7,1/8,1/9,1/10,1/11)
for (i in 1:length(re_vec)){
my_data$x_rot[i] <- my_data$re_vec[i]*my_data$im_vec[i]*cos(pi/3)
my_data$y_rot[i] <- my_data$re_vec[i]*my_data$im_vec[i]*sin(pi/3)
}
my_data
ggplot(my_data)+
geom_point(aes(x=re_vec2,y=im_vec))+
geom_segment(aes(x=re_vec, xend=x_rot,
y=im_vec, yend=y_rot,
color=factor(V4)))
ggplot(my_data)+
geom_point(aes(x=re_vec,y=im_vec))+
geom_segment(aes(x=re_vec, xend=x_rot,
y=im_vec, yend=y_rot,
color=factor(V4)))
ggplot(my_data)+
geom_point(aes(x=re_vec,y=im_vec))+
geom_segment(aes(x=re_vec, xend=x_rot,
y=im_vec, yend=y_rot,
color=factor(V3)))
my_data
x_origs <- re_vec+x_rot
x_origs <- my_data$re_vec+my_data$x_rot
ggplot(my_data)+
geom_point(aes(x=re_vec,y=im_vec))+
geom_segment(aes(x=x_origs, xend=x_rot,
y=im_vec, yend=y_rot,
color=factor(V3)))
my_data
my_data$x_origs <- my_data$re_vec+my_data$x_rot
ggplot(my_data)+
geom_point(aes(x=re_vec,y=im_vec))+
geom_segment(aes(x=x_origs, xend=x_rot,
y=im_vec, yend=y_rot,
color=factor(V3)))
for (i in 2:length(re_vec)){
my_data$x_origs[i] <- my_data$x_origs[i-1]
}
ggplot(my_data)+
geom_point(aes(x=re_vec,y=im_vec))+
geom_segment(aes(x=x_origs, xend=x_rot,
y=im_vec, yend=y_rot,
color=factor(V3)))
my_data
ggplot(my_data)+
geom_point(aes(x=re_vec,y=im_vec))+
geom_segment(aes(x=x_origs, xend=x_rot,
y=sum(im_vec*sin(pi/3)), yend=y_rot,
color=factor(V3)))
ggplot(my_data)+
geom_point(aes(x=re_vec,y=im_vec))+
geom_segment(aes(x=x_origs, xend=x_rot,
y=im_vec, yend=y_rot,
color=factor(V3)))
for (i in 2:length(re_vec)){
my_data$x_origs[i] <- my_data$x_origs[i-1]
my_data$y_origs[i] <- my_data$y_rot[i]*sin(im_vec[i]))}
my_data$y_origs[i] <- my_data$y_rot[i]*sin(im_vec[i])}
for (i in 2:length(re_vec)){
my_data$x_origs[i] <- my_data$x_origs[i-1]
my_data$y_origs[i] <- my_data$y_rot[i]*sin(im_vec[i])
}
my_data$y_origs <- numeric()
my_data$y_origs <- numeric(length = 9)
for (i in 2:length(re_vec)){
my_data$x_origs[i] <- my_data$x_origs[i-1]
my_data$y_origs[i] <- my_data$y_rot[i]*sin(im_vec[i])
}
my_data
ggplot(my_data)+
geom_point(aes(x=re_vec,y=im_vec))+
geom_segment(aes(x=x_origs, xend=x_rot,
y=y_origs, yend=y_rot,
color=factor(V3)))
ggplot(my_data)+
geom_point(aes(x=re_vec,y=im_vec))+
geom_segment(aes(x=x_origs, xend=x_rot,
y=y_origs, yend=y_rot,
color=factor(V3)))+
xlim(0,2)
1/4 /1/5
4/5
1/(1/4) 1/(1/5)
1/(1/4) / 1/(1/5)
1/(1/4) * 1/(1/5)
1/(1/4) / 1/(1/5)
1/(1/5)
1/(1/4) / (1/(1/5))
1/(1/5) / (1/(1/5))
1/(1/5) / (1/(1/6))
1/(1/10) / (1/(1/11))
10/11
View(my_data)
View(my_data)
View(re_vecs)
View(re_vecs)
through
length
length()
kappa <- function(c,theta) {
y <- (2+theta)/c(1+theta^2)^(3/2)
return(y)}
reals <- seq(0,1,length.out = 100)
reals
thetas <- seq(0,pi,length.out = 100)
kappa(c = reals, theta = thetas)
library(magrittr)
kappa(c = reals, theta = thetas) %>% plot()
kappa(c = reals, theta = thetas) %>% plot()
reals <- seq(0,1,length.out = 1000)
thetas <- seq(0,pi,length.out = 1000)
kappa(c = reals, theta = thetas) %>% plot()
thetas <- seq(0,2pi,length.out = 1000)
thetas <- seq(0,2*pi,length.out = 1000)
kappa(c = reals, theta = thetas) %>% plot()
reals <- seq(-1,1,length.out = 1000)
kappa(c = reals, theta = thetas) %>% plot()
reals <- seq(-1,1,length.out = 1000)
kappa(c = reals, theta = thetas) %>% plot()
plot(x = reals, y = thetas)
install.packages("plot3D")
library("plot3D")
scatter.smooth(x = reals, y = thetas, z=kappa(c=reals,y=thetas))
scatter.smooth(x = reals, y = thetas, z=kappa(c=reals,theta=thetas))
scatter3D(scatter.smooth(x = reals, y = thetas,
z=kappa(c=reals,theta=thetas)))
scatter3D(x = reals, y = thetas,
z=kappa(c=reals,theta=thetas))
scatter3D(x = reals, y = thetas,
z=kappa(c=reals,theta=thetas),theta = 3)
scatter3D(x = reals, y = thetas,
z=kappa(c=reals,theta=thetas),theta = 2)
scatter3D(x = reals, y = thetas,
z=kappa(c=reals,theta=thetas),theta = 1)
scatter3D(x = reals, y = thetas,
z=kappa(c=reals,theta=thetas),theta = 400)
?sleep
?stop()
?sleep
for(i in 1:400){scatter3D(x = reals, y = thetas,
z=kappa(c=reals,theta=thetas),theta = i)
Sys.sleep(300)}
?Sys.sleep
for(i in 1:400){scatter3D(x = reals, y = thetas,
z=kappa(c=reals,theta=thetas),theta = i)
Sys.sleep(0.3)}
for(i in 1:400){scatter3D(x = reals, y = thetas,
z=kappa(c=reals,theta=thetas),theta = i)
Sys.sleep(0.1)}
for(i in 1:400){scatter3D(x = reals, y = thetas,
z=kappa(c=reals,theta=thetas),theta = i)
Sys.sleep(0.05)}
reals <- seq(-20,5,length.out = 10000)
thetas <- seq(0,2*pi,length.out = 10000)
for(i in 1:400){scatter3D(x = reals, y = thetas,
z=kappa(c=reals,theta=thetas),theta = i)
Sys.sleep(0.05)}
for(i in 1:400){scatter3D(x = reals, y = thetas,
z=kappa(c=reals,theta=thetas),theta = i)
Sys.sleep(0.05)}
for(i in 1:400){scatter3D(x = reals, y = thetas,
z=kappa(c=reals,theta=thetas),theta = i)
Sys.sleep(0.05)}
for(i in 1:400){scatter3D(x = reals, y = thetas,
z=kappa(c=reals,theta=thetas),theta = i)
Sys.sleep(0.05)}
par(mar=c(1,1,1,1))
for(i in 1:400){scatter3D(x = reals, y = thetas,
z=kappa(c=reals,theta=thetas),theta = i)
Sys.sleep(0.05)}
for(i in 1:400){scatter3D(x = reals, y = thetas,
z=kappa(c=reals,theta=thetas),theta = i)
Sys.sleep(0.3)}
par(mar=c(1,1,1,1))
for(i in 1:400){scatter3D(x = reals, y = thetas,
z=kappa(c=reals,theta=thetas),theta = i)
Sys.sleep(0.3)}
?scatter3D
for(i in 1:400){scatter3D(x = reals, y = thetas,
z=kappa(c=reals,theta=thetas),colvar = x,theta = i)
Sys.sleep(0.3)}
for(i in 1:400){scatter3D(x = reals, y = thetas,
z=kappa(c=reals,theta=thetas),colvar = reals,theta = i)
Sys.sleep(0.3)}
for(i in 1:400){scatter3D(x = reals, y = thetas,
z=kappa(c=reals,theta=thetas),colvar = theta,theta = i)
Sys.sleep(0.2)}
for(i in 1:400){scatter3D(x = reals, y = thetas,
z=kappa(c=reals,theta=thetas),colvar = thetas,theta = i)
Sys.sleep(0.2)}
curvs <- kappa(c=reals,theta=thetas)
for(i in 1:400){scatter3D(x = reals, y = thetas,
z=curvs),colvar = reals,theta = i)
Sys.sleep(0.3)}
for(i in 1:400){scatter3D(x = reals, y = thetas,z=curvs), colvar = reals,theta = i)
Sys.sleep(0.3)}
for(i in 1:400)
{
scatter3D(x = reals, y = thetas,z=curvs), colvar = reals,theta = i)
Sys.sleep(0.3)
}
for(i in 1:400)
{
scatter3D(x = reals, y = thetas,z=curvs), colvar = reals,theta = i)
Sys.sleep(0.3)
}
for(i in 1:400){
scatter3D(x = reals,
y = thetas,
z=curvs, colvar = reals,theta = i)
Sys.sleep(0.3)
}
for(i in 1:400){
scatter3D(x = reals,
y = thetas,
z=curvs, colvar = reals,theta = i)
Sys.sleep(0.1)
}
for(i in 1:400){
scatter3D(x = reals,
y = thetas,
z=curvs, colvar = curvs,theta = i)
Sys.sleep(0.1)
}
?scatter3D()
for(i in 1:400){
scatter3D(x = reals,
y = thetas,
z=curvs, colvar = curvs,theta = i,phi=i*cos(pi/2))
Sys.sleep(0.1)
}
par(mar(c(1,1,1,1)))
par(mar=c(1,1,1,1))
for(i in 1:400){
scatter3D(x = reals,
y = thetas,
z=curvs, colvar = curvs,theta = i,phi=i*cos(pi/2))
Sys.sleep(0.1)
}
for(i in 1:400){
scatter3D(x = reals,
y = thetas,
z=curvs, colvar = curvs,theta = i,phi=i*cos(pi))
Sys.sleep(0.1)
}
for(i in 1:400){
scatter3D(x = reals,
y = thetas,
z=curvs, colvar = curvs,theta = 2i,phi=i*cos(pi))
Sys.sleep(0.2)
}
par(mar=c(1,1,1,1))
reals <- seq(-20,5,length.out = 100)
thetas <- seq(0,2*pi,length.out = 100)
curvs <- kappa(c=reals,theta=thetas)
for(i in 1:400){
scatter3D(x = reals,
y = thetas,
z=curvs, colvar = curvs,theta = i,phi=i*cos(pi))
Sys.sleep(0.1)
}
reals <- seq(-20,20,length.out = 200)
thetas <- seq(0,360,length.out = 200)
curvs <- kappa(c=reals,theta=thetas)
for(i in 1:400){
scatter3D(x = reals,
y = thetas,
z=curvs, colvar = curvs,theta = i,phi=i*cos(pi))
Sys.sleep(0.1)
}
for(i in 1:400){
scatter3D(x = reals*2,
y = thetas,
z=curvs, colvar = curvs,theta = i,phi=i*cos(pi))
Sys.sleep(0.1)
}
for(i in 1:400){
scatter3D(x = reals*4,
y = thetas,
z=curvs, colvar = curvs,theta = i,phi=i*cos(pi))
Sys.sleep(0.1)
}
for(i in 1:400){
scatter3D(x = reals,
y = thetas/360,
z=curvs, colvar = curvs,theta = i,phi=i*cos(pi))
Sys.sleep(0.1)
}
for(i in 1:400){
scatter3D(x = reals,
y = thetas/360,
z=curvs/360, colvar = curvs,theta = i,phi=i*cos(pi))
Sys.sleep(0.1)
}
thetas <- seq(0,pi,length.out = 200)
curvs <- kappa(c=reals,theta=thetas)
for(i in 1:400){
scatter3D(x = reals,
y = thetas/360,
z=curvs, colvar = curvs,theta = i,phi=i*cos(pi))
Sys.sleep(0.1)
}
thetas <- seq(-2*pi,2*pi,length.out = 300)
reals <- seq(-20,20,length.out = 300)
curvs <- kappa(c=reals,theta=thetas)
for(i in 1:400){
scatter3D(x = reals,
y = thetas/360,
z=curvs, colvar = curvs,theta = i,phi=i*cos(pi))
Sys.sleep(0.1)
}
for(i in 1:400){
scatter3D(x = reals,
y = thetas/360,
z=curvs, colvar = curvs,theta = i,phi=i*cos(pi))
Sys.sleep(0.1)
}
for(i in 1:400){
scatter3D(x = reals,
y = thetas/360,
z=curvs, colvar = curvs,theta = i,phi=i*cos(pi))
Sys.sleep(0.1)
}
for(i in 1:400){
scatter3D(x = reals,
y = thetas/360,
z=curvs, colvar = curvs,theta = i,phi=i*cos(pi))
Sys.sleep(0.1)
}
for(i in 1:400){
scatter3D(x = reals,
y = thetas/360,
z=curvs, colvar = curvs,theta = 0,phi=i*cos(pi))
Sys.sleep(0.1)
}
for(i in 1:400){
scatter3D(x = reals,
y = thetas/360,
z=curvs, colvar = curvs,theta = i,phi=0)
Sys.sleep(0.1)
}
for(i in 1:400){
scatter3D(x = reals,
y = thetas/360,
z=curvs, colvar = curvs,theta = i,phi=0)
Sys.sleep(0.1)
}
thetas
thetas/360
for(i in 1:400){
scatter3D(x = reals,
y = thetas,
z=curvs, colvar = curvs,theta = i,phi=0)
Sys.sleep(0.1)
}
for(i in 1:400){
scatter3D(x = reals/2,
y = thetas,
z=curvs, colvar = curvs,theta = i,phi=0)
Sys.sleep(0.1)
}
for(i in 1:400){
scatter3D(x = reals-1,
y = thetas,
z=curvs, colvar = curvs,theta = i,phi=0)
Sys.sleep(0.1)
}
reals
for(i in 1:400){
scatter3D(x = reals,
y = thetas,
z=curvs/2, colvar = curvs,theta = i,phi=0)
Sys.sleep(0.1)
}
for(i in 1:400){
scatter3D(x = reals,
y = thetas,
z=curvs, colvar = curvs/2,theta = i,phi=0)
Sys.sleep(0.1)
}
for(i in 1:400){
scatter3D(x = reals,
y = thetas,
z=curvs, colvar = curvs/2- 1,theta = i,phi=0)
Sys.sleep(0.1)
}
curvs
for(i in 1:400){
scatter3D(x = reals,
y = thetas,
z=curvs, colvar = curvs*i,theta = i,phi=0)
Sys.sleep(0.1)
}
for(i in 1:400){
scatter3D(x = reals,
y = thetas,
z=curvs*i, colvar = curvs*i,theta = i,phi=0)
Sys.sleep(0.1)
}
for(i in 1:400){
scatter3D(x = reals,
y = thetas,
z=curvs*i*pi, colvar = curvs*i,theta = i,phi=0)
Sys.sleep(0.1)
}
for(i in 1:400){
scatter3D(x = reals,
y = thetas,
z=curvs*i*pi/2, colvar = curvs*i,theta = i,phi=0)
Sys.sleep(0.1)
}
for(i in 1:400){
scatter3D(x = reals,
y = thetas,
z=curvs*i*pi/2*sqrt(-1), colvar = curvs*i,theta = i,phi=0)
Sys.sleep(0.1)
}
o
i
View(kappa)
lattice(c(1+10i,100+1000i),n=2)
plot(lattice(c(1+1i,1.1+1.4i),5))
my_lat <- lattice(c(1+10i,100+1000i),n=2)
plot(lattice(c(1+1i,1.1+1.4i),5))
function(c,theta) {
y <- (2+theta)/c(1+theta^2)^(3/2)
return(y)}
reals <- seq(-20,5,length.out = 100)
reals <- seq(-20,5,length.out = 100)
thetas <- seq(-20*pi,40*pi,length.out = 300)
curvs <- kappa(c=reals,theta=thetas)
for(i in 1:1000){
scatter3D(x = reals,
y = thetas,
z=curvs*i*pi/2*sqrt(-1), colvar = curvs*i,theta = i,phi=0)
Sys.sleep(0.1)
}
function(c,theta) {
y <- (2+theta)/c(1+theta^2)^(3/2)
return(y)}
reals <- seq(-20,5,length.out = 100)
thetas <- seq(-20*pi,40*pi,length.out = 300)
reals <- seq(-20,5,length.out = 300)
thetas <- seq(-20*pi,40*pi,length.out = 300)
curvs <- kappa(c=reals,theta=thetas)
for(i in 1:1000){
scatter3D(x = reals,
y = thetas,
z=curvs)
Sys.sleep(0.1)
}
reals <- seq(-5,5,length.out = 300)
thetas <- seq(-20*pi,40*pi,length.out = 300)
curvs <- kappa(c=reals,theta=thetas)
for(i in 1:1000){
scatter3D(x = reals,
y = thetas,
z=curvs)
Sys.sleep(0.1)
}
reals <- seq(-1,1,length.out = 300)
thetas <- seq(-20*pi,40*pi,length.out = 300)
curvs <- kappa(c=reals,theta=thetas)
for(i in 1:1000){
scatter3D(x = reals,
y = thetas,
z=curvs)
Sys.sleep(0.1)
}
thetas <- seq(-4*pi,4*pi,length.out = 300)
curvs <- kappa(c=reals,theta=thetas)
for(i in 1:1000){
scatter3D(x = reals,
y = thetas,
z=curvs)
Sys.sleep(0.1)
}
thetas <- seq(-pi,pi,length.out = 300)
curvs <- kappa(c=reals,theta=thetas)
for(i in 1:1000){
scatter3D(x = reals,
y = thetas,
z=curvs)
Sys.sleep(0.1)
}
