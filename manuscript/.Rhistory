geom_point(alpha=0.5,size=3) +
geom_point(y=66.0,x=0.61626614,color="red")+
geom_text(y=64.5,x=0.61626614,label="Brasil",color="dark red")+
geom_point(y=73.2,x=0.93177030,color="blue")+
geom_text(y=71.5,x=0.93177030,label="Canada",color="dark blue")+
geom_smooth(method="lm")+
xlab("ln de No. de medicos / 1,000 hab.")+
ylab("Expectativa de vida saudavel ao nascer")
ggsave(filename = "images/chap2-bras-can-line.png",type="cairo-png",dpi = 300,units = "cm",height=13,width = 18)
set.seed(2600)
library(magrittr)
library(ggplot2)
library(dplyr)
worldbank_df <- read.csv("data/API_SH.MED.PHYS.ZS_DS2_en_csv_v2_10227587.csv",
header = T,skip = 3)
colnames(worldbank_df)[1] <- "Country"
worldbank_df$n_docs <- sapply(split(worldbank_df[,53:62], #lists of values
seq(nrow(worldbank_df))),
function(x) tail(x[!is.na(x)],1)) %>% #ultimos valores n√£o nulos
as.numeric
who_df <- read.csv("data/who_lifeexpect.csv",skip=2)
who_df$hale <- who_df$X2016
uni_df <- left_join(worldbank_df[,c("Country","n_docs")],
who_df[,c("Country","hale")],by="Country")
ggplot(uni_df,aes(x=n_docs,y=hale))+
geom_point(alpha=0.5,size=3) +
xlab("No. de medicos / 1,000 hab.")+
ylab("Expectativa de vida saudavel ao nascer")
uni_df$log_docs <- log(uni_df$n_docs)
ggplot(uni_df,aes(x=log_docs,y=hale))+
geom_point(alpha=0.5,size=3) +
xlab("ln de No. de medicos / 1,000 hab.")+
ylab("Expectativa de vida saudavel ao nascer")
cor.test(uni_df$log_docs,uni_df$hale)
uni_df$log_docs <- log(uni_df$n_docs)
lm(log_docs ~ hale, data=uni_df) %>% summary
lm(log_docs ~ hale, data=uni_df)
lm(hale ~log_docs, data=uni_df)
lm(hale ~ log_docs, data=uni_df)
lm(hale ~ log_docs, data=uni_df) %>% summary
lm(hale ~ scale(log_docs), data=uni_df) %>% summary
log(2)
log(2) * 3.73
View(uni_df)
log(1.852) * 3.73
(log(1.852) * 3.73)+64.46
0.841*0.841
predict(lm(log_docs ~ hale, data=uni_df))
predict(lm(log_docs ~ hale, data=uni_df),newdata = data.frame(hale=60,log_docs_=2))
doc_lmfit <- lm(log_docs ~ hale, data=uni_df)
predict(doc_lmfit,newdata = data.frame(hale=60,log_docs_=2))
predict(doc_lmfit,newdata = data.frame(hale=60,log_docs_=2))
head(predict(doc_lmfit))
predict(doc_lmfit,newdata = data.frame(hale=60,log_docs=2))
>lm(hale ~ log_docs, data=uni_df) %>% summary
lm(hale ~ log_docs, data=uni_df) %>% summary
doc_lmfit <- lm(hale ~ log_docs, data=uni_df)
head(predict(doc_lmfit))
predict(doc_lmfit,newdata = data.frame(hale=60,log_docs=2))
predict(doc_lmfit,newdata = data.frame(log_docs=2))
exp(2)
predict(doc_lmfit,newdata = data.frame(log_docs=1))
exp(1)
log(2.718282)
log(1.5)
predict(doc_lmfit,newdata = data.frame(log_docs=log(1.5)))
uni_df$preds <- predict(doc_lmfit)
uni_df$preds[complete.cases(uni_df)] <- predict(doc_lmfit)
ggplot(uni_df, aes(x = log_docs, y = hale)) +
geom_segment(aes(xend = log_docs, yend = preds)) +
geom_point() +
geom_point(aes(y = preds), shape = 1)
ggplot(uni_df,aes(x=log_docs,y=hale))+
geom_point(alpha=0.5,size=3) +
geom_segment(aes(xend = log_docs, yend = preds)) +
geom_smooth(method="lm")+
xlab("ln de No. de medicos / 1,000 hab.")+
ylab("Expectativa de vida saudavel ao nascer")
ggplot(uni_df,aes(x=log_docs,y=hale))+
geom_point(alpha=0.5,size=3) +
geom_segment(aes(xend = log_docs, yend = preds)) +
geom_segment(aes(xend = log_docs, yend = mean(hale))) +
geom_smooth(method="lm")+
xlab("ln de No. de medicos / 1,000 hab.")+
ylab("Expectativa de vida saudavel ao nascer")
ggplot(uni_df,aes(x=log_docs,y=hale))+
geom_point(alpha=0.5,size=3) +
geom_segment(aes(xend = log_docs, yend = preds)) +
geom_segment(aes(xend = log_docs, yend = mean(hale)),color="red") +
geom_smooth(method="lm")+
xlab("ln de No. de medicos / 1,000 hab.")+
ylab("Expectativa de vida saudavel ao nascer")
ggplot(uni_df,aes(x=log_docs,y=hale))+
geom_point(alpha=0.5,size=3) +
geom_segment(aes(xend = log_docs, yend = preds)) +
geom_segment(aes(xend = log_docs, yend = mean(uni_df$hale)),color="red") +
geom_smooth(method="lm")+
xlab("ln de No. de medicos / 1,000 hab.")+
ylab("Expectativa de vida saudavel ao nascer")
ggplot(uni_df,aes(x=log_docs,y=hale))+
geom_point(alpha=0.5,size=3) +
$ geom_segment(aes(xend = log_docs, yend = preds)) +
geom_segment(aes(xend = log_docs, yend = mean(uni_df$hale)),color="red") +
geom_smooth(method="lm")+
xlab("ln de No. de medicos / 1,000 hab.")+
ylab("Expectativa de vida saudavel ao nascer")
ggplot(uni_df,aes(x=log_docs,y=hale))+
geom_point(alpha=0.5,size=3) +
$ geom_segment(aes(xend = log_docs, yend = preds)) +
geom_segment(aes(xend = log_docs, yend = mean(uni_df$hale)),color="red") +
geom_smooth(method="lm")+
xlab("ln de No. de medicos / 1,000 hab.")+
ylab("Expectativa de vida saudavel ao nascer")
ggplot(uni_df,aes(x=log_docs,y=hale))+
geom_point(alpha=0.5,size=3) +
# geom_segment(aes(xend = log_docs, yend = preds)) +
geom_segment(aes(xend = log_docs, yend = mean(uni_df$hale)),color="red") +
geom_smooth(method="lm")+
xlab("ln de No. de medicos / 1,000 hab.")+
ylab("Expectativa de vida saudavel ao nascer")
uni_df$doc_mean <- mean(uni_df$n_docs)
uni_df$doc_mean <- mean(uni_df$)
uni_df$doc_mean <- mean(uni_df$hale)
ggplot(uni_df, aes(x = log_docs, y = hale)) +
geom_segment(aes(xend = log_docs, yend = preds)) +
geom_point() +
geom_point(aes(y = preds), shape = 1)
ggplot(uni_df,aes(x=log_docs,y=hale))+
geom_point(alpha=0.5,size=3) +
geom_segment(aes(xend = log_docs, yend = preds)) +
geom_segment(aes(xend = log_docs, yend = preds)) +
geom_smooth(method="lm")+
xlab("ln de No. de medicos / 1,000 hab.")+
ylab("Expectativa de vida saudavel ao nascer")
uni_df$hale_mean <- mean(uni_df$hale)
ggplot(uni_df,aes(x=log_docs,y=hale))+
geom_point(alpha=0.5,size=3) +
geom_segment(aes(xend = log_docs, yend = preds)) +
geom_segment(aes(xend = log_docs, yend = hale_mean)) +
geom_smooth(method="lm")+
xlab("ln de No. de medicos / 1,000 hab.")+
ylab("Expectativa de vida saudavel ao nascer")
ggplot(uni_df,aes(x=log_docs,y=hale))+
geom_point(alpha=0.5,size=3) +
#  geom_segment(aes(xend = log_docs, yend = preds)) +
geom_segment(aes(xend = log_docs, yend = hale_mean)) +
geom_smooth(method="lm")+
xlab("ln de No. de medicos / 1,000 hab.")+
ylab("Expectativa de vida saudavel ao nascer")
uni_df$hale_mean <- mean(uni_df$hale)
uni_df$hale_mean
uni_df$hale_mean[complete.cases(uni_df)] <- mean(uni_df$hale)
ggplot(uni_df,aes(x=log_docs,y=hale))+
geom_point(alpha=0.5,size=3) +
geom_segment(aes(xend = log_docs, yend = preds)) +
geom_segment(aes(xend = log_docs, yend = hale_mean)) +
geom_smooth(method="lm")+
xlab("ln de No. de medicos / 1,000 hab.")+
ylab("Expectativa de vida saudavel ao nascer")
uni_df$hale_mean
uni_df$hale_mean[complete.cases(uni_df)] <- mean(uni_df$hale,na.rm = T)
ggplot(uni_df,aes(x=log_docs,y=hale))+
geom_point(alpha=0.5,size=3) +
geom_segment(aes(xend = log_docs, yend = preds)) +
geom_segment(aes(xend = log_docs, yend = hale_mean)) +
geom_smooth(method="lm")+
xlab("ln de No. de medicos / 1,000 hab.")+
ylab("Expectativa de vida saudavel ao nascer")
uni_df$hale_mean
mean(uni_df$hale,na.rm = T)
uni_df$hale_mean[complete.cases(uni_df)] <- mean(uni_df$hale,na.rm = T)
uni_df$hale_mean<- mean(uni_df$hale,na.rm = T)
ggplot(uni_df,aes(x=log_docs,y=hale))+
geom_point(alpha=0.5,size=3) +
geom_segment(aes(xend = log_docs, yend = preds)) +
geom_segment(aes(xend = log_docs, yend = hale_mean)) +
geom_smooth(method="lm")+
xlab("ln de No. de medicos / 1,000 hab.")+
ylab("Expectativa de vida saudavel ao nascer")
p_preds <- ggplot(uni_df,aes(x=log_docs,y=hale))+
geom_point(alpha=0.5,size=3) +
geom_segment(aes(xend = log_docs, yend = preds)) +
geom_smooth(method="lm")+
xlab("ln de No. de medicos / 1,000 hab.")+
ylab("Expectativa de vida saudavel ao nascer")
p_preds
ggplot(uni_df,aes(x=log_docs,y=hale))+
geom_point(alpha=0.5,size=3) +
geom_segment(aes(xend = log_docs, yend = hale_mean)) +
geom_smooth(method="lm")+
xlab("ln de No. de medicos / 1,000 hab.")+
ylab("Expectativa de vida saudavel ao nascer")
ggplot(uni_df,aes(x=log_docs,y=hale))+
geom_point(alpha=0.5,size=3) +
geom_segment(aes(xend = log_docs, yend = hale_mean)) +
geom_abline(slope = 0,intercept = hale_mean)
ggplot(uni_df,aes(x=log_docs,y=hale))+
geom_point(alpha=0.5,size=3) +
geom_segment(aes(xend = log_docs, yend = hale_mean)) +
geom_abline(slope = 0,intercept = hale_mean)+
xlab("ln de No. de medicos / 1,000 hab.")+
ylab("Expectativa de vida saudavel ao nascer")
ggplot(uni_df,aes(x=log_docs,y=hale))+
geom_point(alpha=0.5,size=3) +
geom_segment(aes(xend = log_docs, yend = hale_mean)) +
geom_abline(slope = 0,intercept = 63.28165)+
xlab("ln de No. de medicos / 1,000 hab.")+
ylab("Expectativa de vida saudavel ao nascer")
ggplot(uni_df,aes(x=log_docs,y=hale))+
geom_point(alpha=0.5,size=3) +
geom_segment(aes(xend = log_docs, yend = hale_mean)) +
geom_abline(slope = 0,intercept = 63.28165)+
xlab("ln de No. de medicos / 1,000 hab.")+
ylab("Expectativa de vida saudavel ao nascer")+
ggplot2::ggtitle("TSS")
ssr_preds <- ggplot(uni_df,aes(x=log_docs,y=hale))+
geom_point(alpha=0.5,size=3) +
geom_segment(aes(xend = log_docs, yend = preds)) +
geom_smooth(method="lm")+
xlab("ln de No. de medicos / 1,000 hab.")+
ylab("Expectativa de vida saudavel ao nascer")+
ggplot2::ggtitle("SSR")
source("aux/multiplot.R")
ssr_res <- ggplot(uni_df,aes(x=log_docs,y=hale))+
geom_point(alpha=0.5,size=3) +
geom_segment(aes(xend = log_docs, yend = preds)) +
geom_smooth(method="lm")+
xlab("ln de No. de medicos / 1,000 hab.")+
ylab("Expectativa de vida saudavel ao nascer")+
ggplot2::ggtitle("SSR")
tss_res <- ggplot(uni_df,aes(x=log_docs,y=hale))+
geom_point(alpha=0.5,size=3) +
geom_segment(aes(xend = log_docs, yend = hale_mean)) +
geom_abline(slope = 0,intercept = 63.28165)+
xlab("ln de No. de medicos / 1,000 hab.")+
ylab("Expectativa de vida saudavel ao nascer")+
ggplot2::ggtitle("TSS")
multiplot(ssr_res,tss_res)
ssr_res <- ggplot(uni_df,aes(x=log_docs,y=hale))+
geom_point(alpha=0.5,size=3) +
geom_segment(aes(xend = log_docs, yend = preds)) +
geom_smooth(method="lm")+
xlab("")+
ylab("Expectativa de vida saudavel ao nascer")+
ggplot2::ggtitle("SSR")
tss_res <- ggplot(uni_df,aes(x=log_docs,y=hale))+
geom_point(alpha=0.5,size=3) +
geom_segment(aes(xend = log_docs, yend = hale_mean)) +
geom_abline(slope = 0,intercept = 63.28165)+
xlab("ln de No. de medicos / 1,000 hab.")+
ylab("Expectativa de vida saudavel ao nascer")+
ggplot2::ggtitle("TSS")
multiplot(ssr_res,tss_res)
ggsave("images/chap2-residuals.png",type="cairo-png",units="cm",height = 18,width = 22,dpi=300)
exp(1:100) %>% plot
library(magritt)
library(magrittr)
library(magritt)
exp(1:100) %>% plot
exp(1:1000) %>% plot
1/exp(1:1000) %>% plot
(1/exp(1:1000)) %>% plot
(1/1+exp(1:1000)) %>% plot
(1/(1+exp(1:1000)) %>% plot
(1/(1+exp(-1:1)) %>% plot
(1/(1+exp(-1:1))) %>% plot
(1/(1+exp(-10:10))) %>% plot
(1/(1+exp(-100:100))) %>% plot
(1/(1-exp(-100:100))) %>% plot
(1/(1+exp(-100:100))) %>% plot
((1+exp(-100:100))) %>% plot
(1/(1+exp(-100:100))) %>% plot
-(1/(1+exp(-100:100))) %>% plot
(-1/(1+exp(-100:100))) %>% plot
-(1/(1+exp(-10:10))) %>% plot
-(1/(1+exp(-30:30))) %>% plot
sig_data <- -(1/(1+exp(-30:30)))
sig_data
seq(-3,3,by =0.3) %>% plot
sig_data <- data.frame(vals = -(1 / (1 + exp(seq(-3,3,by =0.3) ) ))
sig_data <- data.frame(vals = -(1 / (1 + exp(seq(-3,3,by =0.3) ) ) ) )
-(1 / (1 + exp(seq(-3,3,by =0.3) ) )
-(1 / (1 + exp(seq(-3,3,by =0.3) ) ) )
sig_data <- data.frame(vals = -(1 / (1 + exp(seq(-3,3,by =0.3) ) ) ))
nrow(sig_Data)
nrow(sig_data)
sig_data <- data.frame(vals = -(1 / (1 + exp(seq(-4,4,by =0.3) ) ) ))
nrow(sig_data)
sig_data <- data.frame(vals = -(1 / (1 + exp(seq(-5,5,by =0.3) ) ) ))
nrow(sig_data)
sig_data <- data.frame(vals = -(1 / (1 + exp(seq(-5,5,by =0.3) ) ) ),
ids = 1:34)
library(ggplot2)
ggplot(sig_data,aes(x=ids,y=vals))+
geom_point()
ggplot(sig_data,aes(x=ids,y=vals))+
geom_point()
cor.test(sig_data$vals,sig_data_ids)
cor.test(sig_data$vals,sig_data$ids)
seq(-10,10,by =0.3) %>% length()
sig_data <- data.frame(vals = -(1 / (1 + exp(seq(-10,10,by =0.3) ) ) ),
ids = 1:67)
ggplot(sig_data,aes(x=ids,y=vals))+
geom_point()
cor.test(sig_data$vals,sig_data$ids)
sig_data <- data.frame(y_vals = -(1 / (1 + exp(seq(-10,10,by =0.3) ) ) ),
x_vals = 1:67)
ggplot(sig_data,aes(x=ids,y=vals))+
geom_point()
sig_data <- data.frame(y_vals = -(1 / (1 + exp(seq(-10,10,by =0.3) ) ) ),
x_vals = 1:67)
ggplot(sig_data,aes(x=ids,y=vals))+
geom_point()
sig_data <- data.frame(y_vals = -(1 / (1 + exp(seq(-10,10,by =0.3) ) ) ),
x_vals = 1:67)
ggplot(sig_data,aes(x=x_vals,y=y_vals))+
geom_point()
cor.test(sig_data$y_vals,
sig_data$x_vals)
ggsave("images/chap2-sigpoints.png",type="png-cairo",dpi=300,units="cm",height = 15,width = 18)
ggsave("images/chap2-sigpoints.png",type="cairo-png",dpi=300,units="cm",height = 13,width = 15)
ggsave("images/chap2-sigpoints.png",type="cairo-png",dpi=300,units="cm",height = 8,width = 10)
ggsave("images/chap2-sigpoints.png",type="cairo-png",dpi=300,units="cm",height = 13,width = 15)
cor.test(sig_data$y_vals,
sig_data$x_vals)
cor.test(sig_data$y_vals,
sig_data$x_vals)
ggplot(sig_data,aes(x=x_vals,y=y_vals))+
geom_point()+
geom_smooth(method="lm")
ggsave("images/chap2-sigline.png",type="cairo-png",dpi=300,units="cm",height = 13,width = 15)
cor.test(sig_data$y_vals,
sig_data$x_vals,method = "spearman")
ggsave("images/chap2-sigline.png",type="cairo-png",dpi=300,units="cm",height = 10,width = 15)
?wilcox.test
dwilcox(2,6,6)
pwilcox(2,6,6)
pwilcox(4,6,6)
dwilcox(4,6,6)
dwilcox(0,6,6)
dwilcox(1,6,6)
dwilcox(6,6,6)
dwilcox(12,6,6)
dwilcox(100,6,6)
dwilcox(5,6,6)
pwilcox(5,6,6)
pwilcox(0,6,6)
pwilcox(1,6,6)
pwilcox(3,6,6)
pwilcox(4,6,6)
pwilcox(12,6,6)
pwilcox(16,6,6)
pwilcox(25,6,6)
pwilcox(36,6,6)
pwilcox(0,6,6)
pwilcox(21,6,6)
dwilcox(21,6,6)
dwilcox(36,6,6)
dwilcox(0,6,6)
dwilcox(36,6,6)
pwilcox(36,6,6)
pwilcox(35,6,6)
pwilcox(1,6,6)
pwilcox(36,6,6)
pwilcox(0,6,6)
√£o normal
#Dividi os valores por 100 para reduzir a magnitude dos numeros
>my.weights <- rnorm(400)/100
#Le pesos como matriz [100x4]
>w <- matrix(my.weights,100,4)
#Multiplicacao usando o operador %*%
>as.vector(x)%*%w
#Resultado
set.seed(2600)
my.weights <- rnorm(400)/100
w <- matrix(my.weights,100,4)
as.vector(x)%*%w
my.image.data <- sample(0:255,100,replace=T)
x <- matrix(my.image.data,10,10)
as.vector(x)%*%w
x.vec <- c(as.vector(x),1)
my.weights<- rnorm(404)/100
w <- matrix(my.weights,101,4)
x.vec%*%w
max(1,2)
loss <- function(x,w,cor.class){
#Determina delta = 2, a distancia minima entre o maior score e os outros
delta <- 2
#Calcula scores multiplicando valores da imagem por pesos W
scores <- x.vec%*%w
#Score da classe correta fornecida pelo argumento da funcao
correct.class.sc <- scores[cor.class]
#Obtem numero de classes
dimensions.class <- length(scores)
#Perda inicial = 0
cur.loss <- 0
#Loop para calcular a soma dos valores de max(0,~formula SVM)
#A funcao max esta nas funcoes basicas (Base Package) do R
for (i in 1:dimensions.class){
if (i == cor.class){next}
cur.loss <- cur.loss + max(0,scores[i] - correct.class.sc + delta)
}
#Retorna valor da perda
return(cur.loss)}
loss(x,w,1)
loss(x,w,2)
loss(x,w,3)
loss(x,w,4)
loss(x,w,1)
loss(x,w,5)
loss(x,w,4)
loss <- function(x,w,cor.class){
#Determina delta = 2, a distancia minima entre o maior score e os outros
delta <- 1
#Calcula scores multiplicando valores da imagem por pesos W
scores <- x.vec%*%w
#Score da classe correta fornecida pelo argumento da funcao
correct.class.sc <- scores[cor.class]
#Obtem numero de classes
dimensions.class <- length(scores)
#Perda inicial = 0
cur.loss <- 0
#Loop para calcular a soma dos valores de max(0,~formula SVM)
#A funcao max esta nas funcoes basicas (Base Package) do R
for (i in 1:dimensions.class){
if (i == cor.class){next}
cur.loss <- cur.loss + max(0,scores[i] - correct.class.sc + delta)
}
#Retorna valor da perda
return(cur.loss)}
loss(x,w,1)
loss(x,w,2)
>  loss(x,w,1)
[1] 3.466183
>
>  loss(x,w,2)
[1] 0.5338168
>
>  loss(x,w,3)
[1] 31.55408
>
>  loss(x,w,4)
[1] 43.69811
loss(x,w,1)
loss(x,w,2)
loss(x,w,3)
loss(x,w,4)
?ecp
?exp
exp(2)
exp(2.71)
exp(1)
libraru(e1071)
library(e1071)
library(caret)
set.seed(2600)
svm.iris <- svm(Species ~ ., data=iris.tr, cost=100,  kernel="linear")
iris.tr.vec <- createDataPartition(y=iris$Species,p = 4/5,list=F)
iris.tr <- iris[iris.tr.vec,]
iris.ts <- iris[-iris.tr.vec,]
svm.iris <- svm(Species ~ ., data=iris.tr, cost=100,  kernel="linear")
svm.pred <- predict(svm.iris,iris.ts)
agree.tab <- table(pred=svm.pred,true=iris.ts$Species)
agree.tab
classAgreement(agree.tab)
svm.iris1 <- svm(Species ~ .,data=iris.tr,cost=1,kernel="linear")
svm.iris10 <- svm(Species ~ .,data=iris.tr,cost=10,kernel="linear")
svm.iris1000 <- svm(Species ~ .,data=iris.tr,cost=1000,kernel="linear")
tune.info <- tune.svm(Species~., data = iris, cost = 2^(0:10),kernel="linear")
summary(tune.info)
plot(tune.info)
tune.info$best.model
tune.pred <- predict(tune.info$best.model,iris)
agree.tune <- table(pred = tune.pred,true=iris$Species)
agree.tune
classAgreement(agree.tune)
?car::vif
vif(lm(prestige ~ income + education, data=Duncan))
car::vif(lm(prestige ~ income + education, data=Duncan))
car::vif(lm(Sepal.Length ~ Petal.Length + Petal.Width, data=iris))
car::vif(lm(Sepal.Length ~ Petal.Length + Petal.Width + Sepal.Width, data=iris))
pairs(iris)
pairs(iris[,1:4])
lm(Sepal.Length ~ Petal.Length + Petal.Width + Sepal.Width,
data=iris)
lm(Sepal.Length ~ Petal.Length + Petal.Width + Sepal.Width,
data=iris) %>% summary
library(magrittr)
lm(Sepal.Length ~ Petal.Length + Petal.Width + Sepal.Width,
data=iris) %>% summary
lm(Sepal.Length ~ Petal.Width + Sepal.Width,
data=iris) %>% summary
lm(Sepal.Length ~ Petal.Width,
data=iris) %>% summary
lm(Sepal.Length ~  Sepal.Width,
data=iris) %>% summary
lm(Sepal.Length ~ Petal.Width + Sepal.Width,
data=iris) %>% summary
lm(Sepal.Length ~ Petal.Length ,
data=iris) %>% summary
lm(Sepal.Length ~ Petal.Length ,
data=iris) %>% summary
lm(Sepal.Length ~ Petal.Length + Sepal.Length,
data=iris) %>% summary
lm(Sepal.Length ~ Petal.Length + Sepal.Width,
data=iris) %>% summary
lm(Sepal.Length ~ Petal.Length + Sepal.Width,
data=iris) %>% summary
lm(Sepal.Length ~ Petal.Length,
data=iris) %>% summary
lm(Sepal.Length ~ Petal.Length + Sepal.Width,
data=iris) %>% summary
